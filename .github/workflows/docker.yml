name: Docker

on:
  workflow_dispatch:
#  push:
#  schedule:
#  # every day
#    - cron: '0 1 * * *'

env:
  REGISTRY: ghcr.io
  REGISTRY_BASE_PATH: ghcr.io/${{ github.repository_owner }}

jobs:
  build:
    name: Build and publish images
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout outscale/cluster-api-provider-outscale code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          repository: 'outscale/cluster-api-provider-outscale'
          ## change default tag
          ref: 'main'
          path: 'capi-outscale'

      - name: Calculate docker image tag
        id: set-tag
        run: |
          ( cd capi-outscale
          git fetch -t
          tag=$(git describe --tags --always)
          echo "tag=$tag" >> $GITHUB_OUTPUT
          )
      - name: Docker build
        run: |
          ( cd capi-outscale
             bash -c "make docker-build"
          )
        env:
          VERSION: ${{ steps.set-tag.outputs.tag }}
          TAG: ${{ steps.set-tag.outputs.tag }}
          REGISTRY: ${{ env.REGISTRY_BASE_PATH }}

#      - name: Extract Docker metadata
#        id: meta
#        uses: docker/metadata-action@v5
#        with:
#          images: ${{ env.REGISTRY_BASE_PATH }}
#          tags: |
#            type=ref,event=branch
#            type=semver,pattern={{version}}
#
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Docker push
        run: |
          ( cd capi-outscale
             bash -c "make docker-push"
          )
        env:
          VERSION: ${{ steps.set-tag.outputs.tag }}
          TAG: ${{ steps.set-tag.outputs.tag }}
          REGISTRY: ${{ env.REGISTRY_BASE_PATH }}
#
#      - name: Build and push
#        uses: docker/build-push-action@v5
#        with:
#          context: capi-outscale
#          file: "Dockerfile"
#          tags: "${{ env.REGISTRY_BASE_PATH }}:${{ steps.set-tag.outputs.tag }}, ${{ env.REGISTRY_BASE_PATH }}:latest"
#          labels: ${{ steps.meta.outputs.labels }}
#          platforms: linux/amd64
#          push: true
#
